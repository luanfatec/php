a#!/bin/bash
#
# Licensed under GPLv3, see LICENSE for details
# Name:		Subscan
# Version:	0.1
# Author:	Luan Santos
# Date:		Agosto 2019
# https://github.com/luanfatec/subscan/



logo() {
    clear
    echo -e "  ================================================================================================================================="
    echo -e "                      ********     \e[33;1mDNSecury - desenvolvimento e soluções em segurança cibernética \e[00m    ********"
    echo -e "  ================================================================================================================================="
    echo -e "  ============================                                                                         ============================"
    echo -e "       Data: \e[32;1m$(date +%F)\e[00m                                                                                       Hora: \e[32;1m$(date +%T)\e[00m     "
    echo -e "  ============================                                                                         ============================"
	echo -e "\e[00m  ================================================================================================================================="
	echo
}


logo
echo -ne "\e[33;1m    Informe o alvo (exemplo.com.br): \e[00m";read d
echo -ne "\e[33;1m    Informe o tipo de protocolo (http ou https): \e[00m";read p
echo -ne "\e[33;1m    Informe o nome do arquivo de saida: \e[00m";read filename
echo -ne "\e[33;1m    Informe o nome da wordlist: \e[00m";read wd

http() {
    for key in $(cat $wd); do
        
        codigo=$(curl --write-out %{http_code} http://"$key".$d -s -o /dev/null)
        if test "$codigo" -ne 000; then
            if test "$codigo" -eq 200 ;then
                typefile='-success'
                echo -e "   [$(date +%T)] http://$key.$d |-----| \e[32;1m$codigo Ok \e[00m"
                echo -e "   [$(date +%T)] http://$key.$d |-----| \e[32;1m$codigo Ok \e[00m" >> $filename$typefile.txt
            else
                typefile='-error'
                echo -e "   [$(date +%T)] http://$key.$d |-----| \e[31;1m$codigo No \e[00m"
                echo -e "   [$(date +%T)] http://$key.$d |-----| \e[31;1m$codigo No \e[00m" >> $filename$typefile.txt
            fi
        else
            continue
        fi
        
    done
}


https() {
    for key in $(cat $wd); do
        
        codigo=$(curl --write-out %{http_code} https://"$key".$d -s -o /dev/null)
        if test "$codigo" -ne 000; then
            if test "$codigo" -eq 200 ;then
                typefile='-success'
                echo -e "   [$(date +%T)] https://$key.$d |-----| \e[32;1m$codigo Ok \e[00m"
                echo -e "   [$(date +%T)] https://$key.$d |-----| \e[32;1m$codigo Ok \e[00m" >> $filename$typefile.txt
            else
                typefile='-error'
                echo -e "   [$(date +%T)] https://$key.$d |-----| \e[31;1m$codigo No \e[00m"
                echo -e "   [$(date +%T)] https://$key.$d |-----| \e[31;1m$codigo No \e[00m" >> $filename$typefile.txt
            fi
        else
            continue
        fi

    done
}

if ! hash curl 2>/dev/null ;then
    clear
    echo
    echo -e "\n\e[31;1;5mFoi detectado que o sistema não possui os requerimentos necessários\npara a execução do subscan.\naguarde até que seja instalado.\e[00m\n"
    sleep 3
    apt-get install curl
    if ! hash curl 2>/dev/null ;then
        clear
        echo -e "\n\e[31;1mAs dependências não puderam ser instaladas.\nVerifique se a conexão com a internet está estável, e execute outra vez.\nSe o erro persistir reporte o mesmo no github.\e[00m"
        sleep 3
        exit 0;
    fi
fi

if [ -z "$d" -o -z "$p" ] ; then
    clear
    logo
    echo -e "\e[31;1mHouve um erro nos parametros solicitado!\e[00m"
else

    if [ "$p" = "https" ] ; then
        clear
        logo
        https
    elif [ "$p" = "http" ] ; then
        clear
        logo
        http
    else
        clear
        logo
        echo -e "\e[31;1mHouve um erro nos parametros solicitado!\e[00m"
    fi
fi

