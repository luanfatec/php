#!/bin/bash
#
#
#
#


logo() {
    echo -e "  ================================================================================================================================="
    echo -e "                      ********     \e[33;1mDNSecury - desenvolvimento e soluções em segurança cibernética \e[00m    ********"
    echo -e "  ================================================================================================================================="
    echo -e "  ============================                                                                         ============================"
    echo -e "       Data: \e[32;1m$(date +%F)\e[00m                                                                                       Hora: \e[32;1m$(date +%T)\e[00m     "
    echo -e "  ============================                                                                         ============================"
	echo -e "\e[00m  ================================================================================================================================="
	echo
}

help() {
    echo -e "\033[31;1m   Sintax basica:"
    echo -e "\033[31;1m     ./subdomains exemple.com <option> <nomearquivo> <subdomains-words>\033[00m"
    echo
    echo -e "\033[31;1m   Exemplo:"
    echo -e "\033[31;1m     root@mysystem# ./subdomains exemple.com --http filename\033[00m"
    echo
    echo -e "\033[31;1m     --http          Buscar subdominios sem a segurança TLS.\033[00m"
    echo
    echo -e "\033[31;1m     --https          Buscar subdominios com a segurança TLS.\033[00m"
    echo

}


clear

d=$1
p=$2
filename=$3
wd=$4

http() {
    for key in $(cat $wd); do
        
        codigo=$(curl --write-out %{http_code} http://"$key".$d -s -o /dev/null)
        if test "$codigo" -ne 000; then
            if test "$codigo" -eq 200 ;then
                typefile='success_'
                echo -e "   [$(date +%T)] http://$key.$d |-----| \e[32;1m$codigo Ok \e[00m"
                echo -e "   [$(date +%T)] http://$key.$d |-----| \e[32;1m$codigo Ok \e[00m" >> $filename$typefile.txt
            else
                typefile='error_'
                echo -e "   [$(date +%T)] http://$key.$d |-----| \e[31;1m$codigo No \e[00m"
                echo -e "   [$(date +%T)] http://$key.$d |-----| \e[31;1m$codigo No \e[00m" >> $filename$typefile.txt
            fi
        else
            continue
        fi
        hora=$(date +%T)
        
    done
}


https() {
    for key in $(cat $wd); do
        
        codigo=$(curl --write-out %{http_code} https://"$key".$d -s -o /dev/null)
        if test "$codigo" -ne 000; then
            if test "$codigo" -eq 200 ;then
                typefile='success_'
                echo -e "   https://$key.$d |-----| \e[32;1m$codigo Ok \e[00m"
                echo -e "   https://$key.$d |-----| \e[32;1m$codigo Ok \e[00m" >> $filename$typefile.txt
            else
                typefile='error_'
                echo -e "   https://$key.$d |-----| \e[31;1m$codigo No \e[00m"
                echo -e "   https://$key.$d |-----| \e[31;1m$codigo No \e[00m" >> $filename$typefile.txt
            fi
        else
            continue
        fi
	hora=$(date +%T)

    done
}




if [ -z "$d" -o -z "$p" ] ; then
    clear
    logo
    help
else 
    
    if [ "$p" = "--https" ] ; then
        clear
        logo
        https
    elif [ "$p" = "--http" ] ; then
        clear
        logo
        http
    else
        clear
        logo
        help
    fi
fi

